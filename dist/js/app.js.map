{"version":3,"file":"js/app.js","mappings":";;;;;AAAA;;AAIA;AACAA,QAAQ,CAACC,gBAAgB,CAAC,eAAe,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAK;EAC1DA,KAAK,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAM;IAClC,MAAMC,IAAI,GAAGF,KAAK,CAACG,aAAa,CAAC,wBAAwB,CAAC;IAC1D,IAAID,IAAI,EAAE;MACNE,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGJ,IAAI,CAACI,IAAI;IACpC;EACJ,CAAC,CAAC;AACN,CAAC,CAAC;;AAEF;;AAEAT,QAAQ,CAACC,gBAAgB,CAAC,wBAAwB,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAK;EACnEA,KAAK,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAM;IAClC,MAAMC,IAAI,GAAGF,KAAK,CAACG,aAAa,CAAC,GAAG,CAAC;IACrC,IAAID,IAAI,EAAE;MACNE,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGJ,IAAI,CAACI,IAAI;IACpC;EACJ,CAAC,CAAC;AACN,CAAC,CAAC;;AAEF;;AAEAT,QAAQ,CAACI,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClD,MAAMM,QAAQ,GAAGV,QAAQ,CAACC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;EACvD,MAAMU,SAAS,GAAGX,QAAQ,CAACC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC,CAAC;EACvE,MAAMW,cAAc,GAAGZ,QAAQ,CAACM,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC;;EAEnE,IAAIO,eAAe,GAAG,IAAI,CAAC,CAAC;;EAE5B;EACA,MAAMC,eAAe,GAAG;IACtBC,IAAI,EAAE,IAAI;IAAE;IACZC,SAAS,EAAE,CAAC,CAAE;EAChB,CAAC;;EAED,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;IACrD;IACA,IAAIC,YAAY,GAAG,IAAI;IACvB,IAAIC,WAAW,GAAGC,QAAQ;IAE1BH,OAAO,CAACjB,OAAO,CAAEqB,KAAK,IAAK;MACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;QACxB,MAAMC,YAAY,GAAGF,KAAK,CAACG,MAAM,CAACC,qBAAqB,CAAC,CAAC;QACzD,MAAMC,aAAa,GAAGH,YAAY,CAACI,GAAG,GAAGJ,YAAY,CAACK,MAAM,GAAG,CAAC;QAChE,MAAMC,cAAc,GAAGxB,MAAM,CAACyB,WAAW,GAAG,CAAC;QAE7C,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,GAAG,CAACP,aAAa,GAAGG,cAAc,CAAC;QAEjE,IAAIE,gBAAgB,GAAGZ,WAAW,EAAE;UAClCA,WAAW,GAAGY,gBAAgB;UAC9Bb,YAAY,GAAGG,KAAK;QACtB;MACF;IACF,CAAC,CAAC;IAEF,IAAIH,YAAY,EAAE;MAChB,MAAMgB,SAAS,GAAGhB,YAAY,CAACM,MAAM,CAACW,YAAY,CAAC,IAAI,CAAC;;MAExD;MACA,IAAID,SAAS,KAAKvB,eAAe,EAAE;QACjCA,eAAe,GAAGuB,SAAS;QAC3BzB,SAAS,CAACT,OAAO,CAAEC,KAAK,IAAKA,KAAK,CAACmC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC9D,MAAMC,WAAW,GAAGxC,QAAQ,CAACM,aAAa,CACvC,mCAAkC8B,SAAU,IAC/C,CAAC,EAAEK,OAAO,CAAC,wBAAwB,CAAC;QACpC,IAAID,WAAW,EAAEA,WAAW,CAACF,SAAS,CAACI,GAAG,CAAC,QAAQ,CAAC;MACtD;IACF;EACF,CAAC,EAAE5B,eAAe,CAAC;;EAEnB;EACAJ,QAAQ,CAACR,OAAO,CAAEyC,OAAO,IAAK1B,QAAQ,CAAC2B,OAAO,CAACD,OAAO,CAAC,CAAC;;EAExD;EACApC,MAAM,CAACH,gBAAgB,CAAC,QAAQ,EAAE,MAAM;IACtC,MAAMyC,sBAAsB,GAAGjC,cAAc,CAACe,qBAAqB,CAAC,CAAC,CAACE,GAAG;IAEzE,IAAIgB,sBAAsB,GAAG,GAAG,EAAE;MAChC;MACAlC,SAAS,CAACT,OAAO,CAAEC,KAAK,IAAKA,KAAK,CAACmC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAChE,CAAC,MAAM;MACL;MACA,IAAI1B,eAAe,EAAE;QACnBF,SAAS,CAACT,OAAO,CAAEC,KAAK,IAAKA,KAAK,CAACmC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC9D,MAAMC,WAAW,GAAGxC,QAAQ,CAACM,aAAa,CACvC,mCAAkCO,eAAgB,IACrD,CAAC,EAAE4B,OAAO,CAAC,wBAAwB,CAAC;QACpC,IAAID,WAAW,EAAEA,WAAW,CAACF,SAAS,CAACI,GAAG,CAAC,QAAQ,CAAC;MACtD;IACF;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;;AAWF;;AAEA1C,QAAQ,CAACI,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAChD,MAAM0C,YAAY,GAAG9C,QAAQ,CAACM,aAAa,CAAC,4BAA4B,CAAC;EACzE,MAAMyC,iBAAiB,GAAG/C,QAAQ,CAACM,aAAa,CAAC,kBAAkB,CAAC;EACpE,IAAI0C,WAAW,GAAGzC,MAAM,CAAC0C,OAAO;EAEhC1C,MAAM,CAACH,gBAAgB,CAAC,QAAQ,EAAE,MAAM;IACtC,MAAM8C,cAAc,GAAG3C,MAAM,CAAC0C,OAAO;IAErC,IAAIC,cAAc,GAAGF,WAAW,EAAE;MAChC;MACAF,YAAY,CAACK,KAAK,CAACtB,GAAG,GAAI,wDAAuD;MACjFkB,iBAAiB,CAACI,KAAK,CAACC,SAAS,GAAG,0FAA0F;IAChI,CAAC,MAAM;MACL;MACAN,YAAY,CAACK,KAAK,CAACtB,GAAG,GAAG,MAAM;MAC/BkB,iBAAiB,CAACI,KAAK,CAACC,SAAS,GAAG,MAAM;IAC5C;IAEF,IAAI7C,MAAM,CAAC0C,OAAO,GAAG,GAAG,EAAE;MACtBH,YAAY,CAACK,KAAK,CAACtB,GAAG,GAAG,MAAM;MAC/BkB,iBAAiB,CAACI,KAAK,CAACC,SAAS,GAAG,MAAM;IAC9C;IAEEJ,WAAW,GAAGE,cAAc;EAC9B,CAAC,CAAC;AACJ,CAAC,CAAC,C","sources":["webpack://pulsar/./src/js/app.js"],"sourcesContent":["// Next Project Card - Clickable //\n\n\n\n// Next Project Card - Clickable //\ndocument.querySelectorAll('.next-project').forEach((block) => {\n    block.addEventListener('click', () => {\n        const link = block.querySelector('.wp-block-button__link');\n        if (link) {\n            window.location.href = link.href;\n        }\n    });\n});\n\n// Page Navigation Block - Clickable //\n\ndocument.querySelectorAll('.page-navigation-block').forEach((block) => {\n    block.addEventListener('click', () => {\n        const link = block.querySelector('a');\n        if (link) {\n            window.location.href = link.href;\n        }\n    });\n});\n\n// Page sections toggle active state on page navigation // \n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const sections = document.querySelectorAll(\"section\"); // All sections with IDs\n  const navBlocks = document.querySelectorAll(\".page-navigation-block\"); // All navigation blocks\n  const pageNavigation = document.querySelector(\".page-navigation\"); // The navigation container\n\n  let activeSectionId = null; // Track the currently active section\n\n  // Observer options with no static threshold\n  const observerOptions = {\n    root: null, // Viewport as the root\n    threshold: 0, // Trigger as soon as the section enters the viewport\n  };\n\n  const observer = new IntersectionObserver((entries) => {\n    // Calculate the section closest to the center of the viewport\n    let closestEntry = null;\n    let minDistance = Infinity;\n\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        const boundingRect = entry.target.getBoundingClientRect();\n        const sectionCenter = boundingRect.top + boundingRect.height / 2;\n        const viewportCenter = window.innerHeight / 2;\n\n        const distanceToCenter = Math.abs(sectionCenter - viewportCenter);\n\n        if (distanceToCenter < minDistance) {\n          minDistance = distanceToCenter;\n          closestEntry = entry;\n        }\n      }\n    });\n\n    if (closestEntry) {\n      const sectionId = closestEntry.target.getAttribute(\"id\");\n\n      // Update active state for the closest section\n      if (sectionId !== activeSectionId) {\n        activeSectionId = sectionId;\n        navBlocks.forEach((block) => block.classList.remove(\"active\"));\n        const targetBlock = document.querySelector(\n          `.page-navigation-block a[href=\"#${sectionId}\"]`\n        )?.closest(\".page-navigation-block\");\n        if (targetBlock) targetBlock.classList.add(\"active\");\n      }\n    }\n  }, observerOptions);\n\n  // Observe each section\n  sections.forEach((section) => observer.observe(section));\n\n  // Scroll listener for page-navigation visibility check\n  window.addEventListener(\"scroll\", () => {\n    const pageNavDistanceFromTop = pageNavigation.getBoundingClientRect().top;\n\n    if (pageNavDistanceFromTop > 400) {\n      // Disable all active states if .page-navigation is >400px from top\n      navBlocks.forEach((block) => block.classList.remove(\"active\"));\n    } else {\n      // Restore active state based on current section\n      if (activeSectionId) {\n        navBlocks.forEach((block) => block.classList.remove(\"active\"));\n        const targetBlock = document.querySelector(\n          `.page-navigation-block a[href=\"#${activeSectionId}\"]`\n        )?.closest(\".page-navigation-block\");\n        if (targetBlock) targetBlock.classList.add(\"active\");\n      }\n    }\n  });\n});\n\n\n\n  \n  \n  \n  \n  \n\n\n// Scroll up behaviour on header // \n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const navContainer = document.querySelector(\".page-navigation-container\");\n    const navContainerInner = document.querySelector(\".page-navigation\");\n    let lastScrollY = window.scrollY;\n  \n    window.addEventListener(\"scroll\", () => {\n      const currentScrollY = window.scrollY;\n  \n      if (currentScrollY < lastScrollY) {\n        // Scrolling up\n        navContainer.style.top = `calc(var(--wp--custom--spacing--sticky-height) + 56px)`;\n        navContainerInner.style.boxShadow = \"0px 10px 15px -3px rgba(203, 203, 203, 0.10), 0px 4px 6px -4px rgba(203, 203, 203, 0.10)\";\n      } else {\n        // Scrolling down\n        navContainer.style.top = \"48px\";\n        navContainerInner.style.boxShadow = \"none\";\n      }\n\n    if (window.scrollY < 100) {\n        navContainer.style.top = \"48px\";\n        navContainerInner.style.boxShadow = \"none\";\n    }\n  \n      lastScrollY = currentScrollY;\n    });\n  });\n\n\n\n"],"names":["document","querySelectorAll","forEach","block","addEventListener","link","querySelector","window","location","href","sections","navBlocks","pageNavigation","activeSectionId","observerOptions","root","threshold","observer","IntersectionObserver","entries","closestEntry","minDistance","Infinity","entry","isIntersecting","boundingRect","target","getBoundingClientRect","sectionCenter","top","height","viewportCenter","innerHeight","distanceToCenter","Math","abs","sectionId","getAttribute","classList","remove","targetBlock","closest","add","section","observe","pageNavDistanceFromTop","navContainer","navContainerInner","lastScrollY","scrollY","currentScrollY","style","boxShadow"],"sourceRoot":""}